#!/usr/bin/env python3
"""
–í–µ–±-–≤–µ—Ä—Å–∏—è –∫–ª–æ–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≥–æ–ª–æ—Å–∞ –¥–ª—è Google Colab
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç Gradio –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import gradio as gr
import tempfile
import os
import numpy as np
import soundfile as sf
import torch
from pathlib import Path

# –ò–º–ø–æ—Ä—Ç TTS
try:
    from TTS.api import TTS
    print("‚úÖ TTS –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ TTS: {e}")
    print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install TTS")

class VoiceClonerWeb:
    def __init__(self):
        self.xtts_model = None
        self.init_model()
    
    def init_model(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ XTTS v2"""
        try:
            print("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ XTTS v2...")
            
            # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è PyTorch 2.6
            try:
                from torch.serialization import add_safe_globals
                from TTS.tts.configs.xtts_config import XttsConfig
                safe_classes = [XttsConfig]
                add_safe_globals(safe_classes)
                print("‚úÖ PyTorch safe globals –¥–æ–±–∞–≤–ª–µ–Ω—ã")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ safe globals: {e}")
            
            # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
            self.xtts_model = TTS("tts_models/multilingual/multi-dataset/xtts_v2")
            print("‚úÖ XTTS v2 –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {e}")
            self.xtts_model = None
    
    def clone_voice(self, text, voice_file, language="ru", temperature=0.7, speed=1.0):
        """–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–∞"""
        if not self.xtts_model:
            return None, "‚ùå –ú–æ–¥–µ–ª—å XTTS v2 –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!"
        
        if not voice_file:
            return None, "‚ùå –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –≥–æ–ª–æ—Å–æ–º!"
        
        if not text.strip():
            return None, "‚ùå –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏!"
        
        try:
            print(f"üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞: {text[:50]}...")
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            with tempfile.NamedTemporaryFile(suffix=".wav", delete=False) as tmp_file:
                output_path = tmp_file.name
            
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≥–æ–ª–æ—Å–∞
            self.xtts_model.tts_to_file(
                text=text,
                speaker_wav=voice_file,
                language=language,
                file_path=output_path,
                speed=speed
            )
            
            print(f"‚úÖ –ì–æ–ª–æ—Å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {output_path}")
            return output_path, f"‚úÖ –ì–æ–ª–æ—Å —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω! –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤"
            
        except Exception as e:
            error_msg = f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}"
            print(error_msg)
            return None, error_msg
    
    def get_voice_info(self, voice_file):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ–ª–æ—Å–æ–≤–æ–º —Ñ–∞–π–ª–µ"""
        if not voice_file:
            return "–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
        
        try:
            # –ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            y, sr = sf.read(voice_file)
            duration = len(y) / sr
            
            return f"""üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ–ª–æ—Å–æ–≤–æ–º —Ñ–∞–π–ª–µ:
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration:.1f} —Å–µ–∫—É–Ω–¥
‚Ä¢ –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏: {sr} –ì—Ü
‚Ä¢ –ö–∞–Ω–∞–ª–æ–≤: {'–º–æ–Ω–æ' if len(y.shape) == 1 else '—Å—Ç–µ—Ä–µ–æ'}
‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(voice_file) / 1024 / 1024:.1f} –ú–ë

{'‚úÖ –§–∞–π–ª –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è' if duration >= 10 else '‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ñ–∞–π–ª –¥–ª–∏–Ω–Ω–µ–µ 10 —Å–µ–∫—É–Ω–¥'}"""
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–∞: {str(e)}"

def create_interface():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    cloner = VoiceClonerWeb()
    
    # –ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞
    example_text = """–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ–∑–≤—É—á–∫–∏ –≤–∞—à–∏–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≥–æ–ª–æ—Å–æ–º.

–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç XTTS v2 –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.
–í—ã –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∏ –æ–Ω –±—É–¥–µ—Ç –æ–∑–≤—É—á–µ–Ω –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ (10+ —Å–µ–∫—É–Ω–¥)
‚Ä¢ –ì–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ –±–µ–∑ —Ñ–æ–Ω–æ–≤–æ–≥–æ —à—É–º–∞
‚Ä¢ –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""
    
    with gr.Blocks(title="üé§ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ì–æ–ª–æ—Å–∞ XTTS v2", theme=gr.themes.Soft()) as interface:
        gr.Markdown("""
        # üé§ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ì–æ–ª–æ—Å–∞ —Å XTTS v2
        
        ### üá∑üá∫ –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π –∫–ª–æ–Ω–∏—Ä–æ–≤—â–∏–∫ –≥–æ–ª–æ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ XTTS v2
        
        **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**
        1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –≥–æ–ª–æ—Å–æ–º (WAV, MP3, FLAC)
        2. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏
        3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
        4. –ù–∞–∂–º–∏—Ç–µ "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å"
        """)
        
        with gr.Row():
            with gr.Column(scale=1):
                gr.Markdown("### üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ–ª–æ—Å–∞")
                
                voice_file = gr.Audio(
                    label="–§–∞–π–ª —Å –≥–æ–ª–æ—Å–æ–º –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
                    type="filepath",
                    sources=["upload"]
                )
                
                voice_info = gr.Textbox(
                    label="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ",
                    value="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞",
                    interactive=False,
                    max_lines=8
                )
                
                gr.Markdown("### ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
                
                language = gr.Dropdown(
                    choices=["ru", "en", "es", "fr", "de", "it", "pt", "pl", "tr", "nl", "cs", "ar", "zh-cn", "hu", "ko", "ja", "hi"],
                    value="ru",
                    label="–Ø–∑—ã–∫",
                    info="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞"
                )
                
                temperature = gr.Slider(
                    minimum=0.1,
                    maximum=1.5,
                    value=0.7,
                    step=0.1,
                    label="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å)",
                    info="–ú–µ–Ω—å—à–µ = –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ, –±–æ–ª—å—à–µ = –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ"
                )
                
                speed = gr.Slider(
                    minimum=0.5,
                    maximum=2.0,
                    value=1.0,
                    step=0.1,
                    label="–°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏",
                    info="–ú–µ–Ω—å—à–µ = –º–µ–¥–ª–µ–Ω–Ω–µ–µ, –±–æ–ª—å—à–µ = –±—ã—Å—Ç—Ä–µ–µ"
                )
            
            with gr.Column(scale=2):
                gr.Markdown("### üìù –¢–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏")
                
                text_input = gr.Textbox(
                    label="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",
                    value=example_text,
                    lines=12,
                    max_lines=20,
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ..."
                )
                
                generate_btn = gr.Button(
                    "üéØ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å",
                    variant="primary",
                    size="lg"
                )
                
                status = gr.Textbox(
                    label="–°—Ç–∞—Ç—É—Å",
                    value="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
                    interactive=False
                )
                
                result_audio = gr.Audio(
                    label="–†–µ–∑—É–ª—å—Ç–∞—Ç",
                    type="filepath"
                )
        
        # –°–æ–±—ã—Ç–∏—è
        voice_file.change(
            fn=cloner.get_voice_info,
            inputs=[voice_file],
            outputs=[voice_info]
        )
        
        generate_btn.click(
            fn=cloner.clone_voice,
            inputs=[text_input, voice_file, language, temperature, speed],
            outputs=[result_audio, status]
        )
        
        gr.Markdown("""
        ### üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞:
        
        **–§–∞–π–ª —Å –≥–æ–ª–æ—Å–æ–º:**
        - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10-60 —Å–µ–∫—É–Ω–¥
        - –ö–∞—á–µ—Å—Ç–≤–æ: –±–µ–∑ —à—É–º–æ–≤ –∏ —ç—Ö–∞
        - –§–æ—Ä–º–∞—Ç: WAV, MP3, FLAC
        - –ß–µ—Ç–∫–∞—è —Ä–µ—á—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        
        **–¢–µ–∫—Å—Ç:**
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
        - –ò–∑–±–µ–≥–∞–π—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        - –î–ª–∏–Ω–∞: –æ—Ç 10 –¥–æ 500 —Å–ª–æ–≤
        
        **–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
        - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ 0.7 - –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å–ª—É—á–∞–µ–≤
        - –°–∫–æ—Ä–æ—Å—Ç—å 1.0 - –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏
        """)
    
    return interface

def main():
    """–ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞...")
    
    interface = create_interface()
    
    # –ó–∞–ø—É—Å–∫ —Å –ø—É–±–ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –¥–ª—è Colab
    interface.launch(
        share=True,  # –°–æ–∑–¥–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É
        server_name="0.0.0.0",
        server_port=7860,
        debug=True
    )

if __name__ == "__main__":
    main()

